#strict on#target illustrator#includepath "~/Library/AIScripts/SICNA/libs"#include "Message.jsx"#include "Color.jsx"#include "GlobalLayer.jsx"#include "GlobalColor.jsx"#include "ActiveArtboard.jsx"#include "Millimeter.jsx"function main() {     if (app.documents.length == 0) {        Message.info("Bitte öffne ein Dokument um das Skript auszuführen.");        return;    }    var doc = app.activeDocument;            // global settings    var layer = new GlobalLayer('Druckhinweis');    var color = new GlobalColor('Hinweis', [100, 0, 0, 0]);    var font = {        regular: app.textFonts.getByName("OpenSans"),        bold: app.textFonts.getByName("OpenSans-Bold")    }    var artboard = new ActiveArtboard();    // actions    var box = layer.pathItems.rectangle(        artboard.topY,        artboard.bottomX + Millimeter(50),        Millimeter(500),        Millimeter(400)    );        box.name = 'Hintergrund';    box.fillColor = color.color;    box.strokeWidth = 0;    box.locked = true;            // Text    var padding = Millimeter(40);    var textColor = Color.cmyk(0, 0, 0, 0);        var size = Millimeter(22);        var titleText = layer.textFrames.pointText([            box.left + padding,             box.top - padding / 1.3 - size    ]);     titleText.contents = 'DRUCKHINWEISE';     titleText.name = 'Title Druckhinweise';    titleText.locked = true;    var fontStyle = titleText.textRange.characterAttributes;    fontStyle.fillColor = textColor;    fontStyle.textFont = font.bold;    fontStyle.size = size;        size = Millimeter(24);    var materialText = layer.textFrames.pointText([        box.left + padding,         titleText.top - titleText.height - size- Millimeter(5)    ]);       materialText.contents = 'Material: (Typ)';    materialText.name = 'Material';    fontStyle = materialText.textRange.characterAttributes;    fontStyle.fillColor = textColor;    fontStyle.textFont = font.regular;    fontStyle.size = size;        var laminateText = layer.textFrames.pointText([        box.left + padding,         materialText.top - materialText.height - size    ]);       laminateText.contents = 'Laminat: (ohne)';    laminateText.name = 'Laminat';    fontStyle = laminateText.textRange.characterAttributes;    fontStyle.fillColor = textColor;    fontStyle.textFont = font.regular;    fontStyle.size = size;        var profileText = layer.textFrames.pointText([        box.left + padding,         laminateText.top - laminateText.height - size    ]);       profileText.contents = 'Profil: (Druckerprofil)';    profileText.name = 'Druckerprofil';    fontStyle = profileText.textRange.characterAttributes;    fontStyle.fillColor = textColor;    fontStyle.textFont = font.regular;    fontStyle.size = size;        var size = Millimeter(22);        var notesTitleText = layer.textFrames.pointText([            box.left + padding,             profileText.top - profileText.height - size - Millimeter(25)    ]);     notesTitleText.contents = 'ANMERKUNGEN';    notesTitleText.name = 'Titel Anmerkungen';    notesTitleText.locked = true;    var fontStyle = notesTitleText.textRange.characterAttributes;    fontStyle.fillColor = textColor;    fontStyle.textFont = font.bold;    fontStyle.size = size;        size = Millimeter(24);    var notesText = layer.textFrames.pointText([        box.left + padding,         notesTitleText.top - notesTitleText.height - size- Millimeter(5)    ]);       notesText.contents = '(keine)';    notesText.name = 'Anmerkungen';    fontStyle = notesText.textRange.characterAttributes;    fontStyle.fillColor = textColor;    fontStyle.textFont = font.regular;    fontStyle.size = size;        layer.locked = true;    }main();